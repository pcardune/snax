{
  "name": "pcardune-snax-lsp",
  "description": "Snax language server and vscode extension",
  "author": "Paul Carduner",
  "license": "MIT",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/pcardune/snax"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "main": "./out/main.js",
  "contributes": {
    "languages": [
      {
        "id": "snax",
        "extensions": [
          ".snx"
        ],
        "aliases": [
          "Snax",
          "snx"
        ],
        "filenames": [],
        "firstLine": "^#!/.*\\bsnax\\b",
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "./icons/python-light.png",
          "dark": "./icons/python-dark.png"
        }
      }
    ],
    "grammars": [
      {
        "language": "snax",
        "scopeName": "source.snax",
        "path": "./syntaxes/snax.tmGrammar.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Example configuration",
      "properties": {
        "snaxLanguageServer.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "snaxLanguageServer.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        },
        "snaxLanguageServer.stdlibLocation": {
          "scope": "resource",
          "type": "string",
          "default": "https://raw.githubusercontent.com/pcardune/snax/main/snax/stdlib/",
          "description": "Location of the snax standard library"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "compile": "npm run esbuild-base -- --sourcemap",
    "watch": "npm run esbuild-base -- --watch",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "esbuild-base": "node build.mjs",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "typescript": "^5.2.2",
    "@vscode/vsce": "^2.21.1",
    "esbuild": "^0.19.5"
  }
}
